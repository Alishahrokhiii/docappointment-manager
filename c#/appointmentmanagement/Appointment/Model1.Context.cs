//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Appointment
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class matabEntities3 : DbContext
    {
        public matabEntities3()
            : base("name=matabEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Patient> Patients { get; set; }
        public DbSet<reserve> reserves { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<resview> resviews { get; set; }
    
        public virtual int AddRes(string iD, string sh_Bimar, string date_reserve, string az_hour, string ta_hour)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var sh_BimarParameter = sh_Bimar != null ?
                new ObjectParameter("Sh_Bimar", sh_Bimar) :
                new ObjectParameter("Sh_Bimar", typeof(string));
    
            var date_reserveParameter = date_reserve != null ?
                new ObjectParameter("date_reserve", date_reserve) :
                new ObjectParameter("date_reserve", typeof(string));
    
            var az_hourParameter = az_hour != null ?
                new ObjectParameter("az_hour", az_hour) :
                new ObjectParameter("az_hour", typeof(string));
    
            var ta_hourParameter = ta_hour != null ?
                new ObjectParameter("ta_hour", ta_hour) :
                new ObjectParameter("ta_hour", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRes", iDParameter, sh_BimarParameter, date_reserveParameter, az_hourParameter, ta_hourParameter);
        }
    
        public virtual int CreatePatient(string iD, string sh_Bimar, string fname, string lname, string mobile, string age)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var sh_BimarParameter = sh_Bimar != null ?
                new ObjectParameter("Sh_Bimar", sh_Bimar) :
                new ObjectParameter("Sh_Bimar", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePatient", iDParameter, sh_BimarParameter, fnameParameter, lnameParameter, mobileParameter, ageParameter);
        }
    
        public virtual ObjectResult<GetAlluser_Result> GetAlluser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlluser_Result>("GetAlluser");
        }
    
        public virtual ObjectResult<Show_Result> Show()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_Result>("Show");
        }
    
        public virtual ObjectResult<Showres_Result> Showres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Showres_Result>("Showres");
        }
    }
}
